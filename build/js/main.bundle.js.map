{"version":3,"sources":["webpack://keksobooking/./source/js/util.js","webpack://keksobooking/./source/js/card.js","webpack://keksobooking/./source/js/form-validation.js","webpack://keksobooking/./source/js/form.js","webpack://keksobooking/./source/js/filter.js","webpack://keksobooking/./source/js/page-activation.js","webpack://keksobooking/./source/js/map.js","webpack://keksobooking/./source/js/photo.js","webpack://keksobooking/./source/js/server.js","webpack://keksobooking/./source/js/main.js"],"names":["TokyoCenterView","cardTemplate","document","querySelector","content","renderCard","estateObject","newCard","cloneNode","src","author","avatar","textContent","offer","title","innerHTML","address","price","type","rooms","guests","checkin","checkout","possibleFeaturesList","featuresList","features","i","length","element","insertAdjacentHTML","description","photoGallery","photosList","photos","minPrice","estateObjectType","checkPriceValidity","formPriceInput","value","setCustomValidity","reportValidity","makeSelectorsDependent","firstSelector","secondSelector","getConformity","roomsNumber","guestsNumber","formTitleInput","formHousingTypeSelector","formCheckEntrySelector","formCheckDepartureSelector","formAddress","roomsNumberSelect","guestsNumberSelect","formSuccessNotice","formErrorNotice","formResetButton","formFieldSets","querySelectorAll","main","addEventListener","valueLength","validity","valueMissing","evt","target","placeholder","throwFormErrorNotice","errorMessage","appendChild","contains","removeChild","evtKeydown","key","fillFormAddress","latitude","longitude","readOnly","filterForm","filters","switchPageActivation","deactivator","classList","add","remove","forEach","fieldSet","disabled","switchFormActivation","filter","switchFiltersActivation","map","L","on","setView","lat","lng","tileLayer","attribution","addTo","mainPinIcon","icon","iconUrl","iconSize","iconAnchor","mainPinMarker","marker","draggable","resetMainPinPosition","setLatLng","MainMarkerCoordinates","getLatLng","formAddressLatitude","Math","round","formAddressLongitude","PinIcon","pinsLayerGroup","layerGroup","renderPins","estateObjects","cyclesNumber","getLayers","clearLayers","PinMarker","location","bindPopup","addLayer","FILE_TYPES","avatarFileChooser","avatarPreview","housingFileChooser","housingPreviewBlock","callback","onSuccess","onError","file","files","fileName","name","toLowerCase","some","ending","endsWith","reader","FileReader","result","readAsDataURL","throwFormSuccessNotice","reset","preventDefault","formData","FormData","fetch","method","body","then","response","ok","status","statusText","catch","err","setFormSubmitHandler","data","cb","dataToFilter","_","debounce","filteredOffers","housingType","checkHousingType","indicator","checkPriceRange","housingRooms","parseInt","checkHousingRooms","housingGuests","checkHousingGuests","facilitiesArray","checked","includes","checkFacilities","message","node","createElement","style","position","left","right","zIndex","top","width","fontSize","insertAdjacentElement","json","Error"],"mappings":"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","file":"main.bundle.js","sourcesContent":["const showErrorMessage = (message) => {\n  const node = document.createElement('div');\n  node.style = 'border: 5px solid red; z-index: 100; margin: 0 auto; text-align: center; background-color: yellow; color: red; padding: 0;';\n  node.style.position = 'fixed';\n  node.style.left = 0;\n  node.style.right = 0;\n  node.style.zIndex = 3;\n  node.style.top = '595px';\n  node.style.width = '1200px';\n  node.style.fontSize = '50px';\n  node.textContent = message;\n  document.body.insertAdjacentElement('afterbegin', node);\n};\n\nconst TokyoCenterView = { // координаты центра Токио и начальный масштаб карты\n  LATITUDE: 35.65858,\n  LONGITUDE: 139.74544,\n  ZOOM: 9,\n}\n\nexport {showErrorMessage, TokyoCenterView};\n","const cardTemplate = document.querySelector('#card').content.querySelector('.popup');\n\nconst renderCard = (estateObject) => {\n  const newCard = cardTemplate.cloneNode(true);\n\n  newCard.querySelector('img').src = estateObject.author.avatar;\n  newCard.querySelector('.popup__title').textContent = estateObject.offer.title;\n  newCard.querySelector('.popup__text--address').innerHTML = estateObject.offer.address;\n  newCard.querySelector('.popup__text--price').innerHTML = `${estateObject.offer.price}&#x20bd/ночь`;\n\n  switch (estateObject.offer.type) {\n    case 'bungalow':\n      newCard.querySelector('.popup__type').textContent = 'Бунгало';\n      break;\n    case 'flat':\n      newCard.querySelector('.popup__type').textContent = 'Квартира';\n      break;\n    case 'house':\n      newCard.querySelector('.popup__type').textContent = 'Дом';\n      break;\n    case 'palace':\n      newCard.querySelector('.popup__type').textContent = 'Дворец';\n      break;\n  }\n\n  newCard.querySelector('.popup__text--capacity').textContent = `${estateObject.offer.rooms} комнаты для ${estateObject.offer.guests} гостей`;\n  newCard.querySelector('.popup__text--time').textContent = `Заезд после ${estateObject.offer.checkin}, выезд до ${estateObject.offer.checkout}`;\n\n  const possibleFeaturesList = newCard.querySelector('.popup__features');\n  const featuresList = estateObject.offer.features;\n  possibleFeaturesList.innerHTML = '';\n  for (let i = 0; i < featuresList.length; i++) {\n    const element = `<li class=\"popup__feature popup__feature--${featuresList[i]}\"></li>`;\n    possibleFeaturesList.insertAdjacentHTML('beforeend', element);\n  }\n\n  newCard.querySelector('.popup__description').textContent = estateObject.offer.description;\n\n  const photoGallery = newCard.querySelector('.popup__photos');\n  const photosList = estateObject.offer.photos;\n  photoGallery.innerHTML = '';\n  for (let i = 0; i < photosList.length; i++) {\n    const element = `<img src=\"${photosList[i]}\" class=\"popup__photo\" width=\"45\" height=\"40\" alt=\"Фотография жилья\"></img>`;\n    photoGallery.insertAdjacentHTML('beforeend', element);\n  }\n\n  return newCard;\n\n};\n\nexport {renderCard}\n","import {formTitleInput, formPriceInput} from './form.js';\n\nconst TITLE_MIN_LENGTH = 30;\nconst TITLE_MAX_LENGTH = 100;\nconst MAX_PRICE = 1000000;\n\nlet minPrice = 1000;\nlet estateObjectType = 'Квартира';\n\nexport const validateTitleLength = () => { // функция валидации длины заголовка при его введении\n  const valueLength = formTitleInput.value.length;\n\n  if (valueLength < TITLE_MIN_LENGTH) {\n    formTitleInput.setCustomValidity('Добавьте ' + (TITLE_MIN_LENGTH - valueLength) + ' симв.');\n  } else if (valueLength > TITLE_MAX_LENGTH) {\n    formTitleInput.setCustomValidity('Удалите ' + (valueLength - TITLE_MAX_LENGTH) + ' симв.');\n  } else {\n    formTitleInput.setCustomValidity('');\n  }\n\n  formTitleInput.reportValidity();\n};\n\nexport const checkTitleExistence = () => { // функция валидации наличия заголовка\n  if (formTitleInput.validity.valueMissing) {\n    formTitleInput.setCustomValidity('Без заголовка объявление не публикуется');\n  }\n}\n\nexport const checkPriceValidity = () => { // функция валидации величины цены\n  const price = formPriceInput.value;\n  if (price > MAX_PRICE) {\n    formPriceInput.setCustomValidity('Больше миллиона цена быть не может');\n  } else if (price < minPrice) {\n    formPriceInput.setCustomValidity(`Меньше ${minPrice} цены на объект \"${estateObjectType}\" быть не может`);\n  } else {\n    formPriceInput.setCustomValidity('');\n  }\n  formPriceInput.reportValidity();\n};\n\nexport const changeValidPriceRange = (evt) => { // изменение минимальной цены при изменении типа жилья\n  switch (evt.target.value) {\n    case 'bungalow':\n      minPrice = 0;\n      estateObjectType = 'Бунгало';\n      break;\n    case 'flat':\n      minPrice = 1000;\n      estateObjectType = 'Квартира';\n      break;\n    case 'house':\n      minPrice = 5000;\n      estateObjectType = 'Дом';\n      break;\n    case 'palace':\n      minPrice = 10000;\n      estateObjectType = 'Дворец';\n      break;\n  }\n  formPriceInput.placeholder = minPrice;\n  checkPriceValidity(minPrice, estateObjectType); // валидация величины цены\n};\n\nexport const checkPriceExistence = () => {  // валидация наличия цены\n  if (formPriceInput.validity.valueMissing) {\n    formPriceInput.setCustomValidity('Без указания цены объявление не публикуется');\n  }\n};\n\nexport const makeSelectorsDependent = (firstSelector, secondSelector) => { // синхронизация двух селекторов\n  secondSelector.value = firstSelector.value;\n};\n\nexport const getConformity = (roomsNumber, guestsNumber) => {\n  if (roomsNumber.value === '100' && guestsNumber.value !== '0') {\n    guestsNumber.setCustomValidity('Выбранное помещение не предназначено для проживания гостей');\n  } else if (roomsNumber.value !== '100' && guestsNumber.value === '0') {\n    guestsNumber.setCustomValidity('Варианту \"не для гостей\" соответствует только помещение в 100 комнат');\n  } else if (roomsNumber.value < guestsNumber.value) {\n    guestsNumber.setCustomValidity('Количество гостей не может быть больше количества мест');\n  } else {\n    guestsNumber.setCustomValidity('');\n  }\n  guestsNumber.reportValidity();\n};\n","import {validateTitleLength, checkTitleExistence, checkPriceValidity, changeValidPriceRange, checkPriceExistence,\n  makeSelectorsDependent, getConformity} from './form-validation.js';\nimport {sendData} from './server.js';\nimport {TokyoCenterView} from './util.js';\n\nconst form = document.querySelector('.ad-form');\nconst formTitleInput = document.querySelector('#title');\nconst formHousingTypeSelector = form.querySelector('#type');\nconst formPriceInput = form.querySelector('#price');\nconst formCheckEntrySelector = form.querySelector('#timein');\nconst formCheckDepartureSelector = form.querySelector('#timeout');\nconst formAddress = form.querySelector('#address');\nconst roomsNumberSelect = document.querySelector('#room_number');\nconst guestsNumberSelect = document.querySelector('#capacity');\nconst formSuccessTemplate = document.querySelector('#success').content.querySelector('.success');\nconst formSuccessNotice = formSuccessTemplate.cloneNode(true);\nconst formErrorTemplate = document.querySelector('#error').content.querySelector('.error');\nconst formErrorNotice = formErrorTemplate.cloneNode(true);\nconst formResetButton = form.querySelector('.ad-form__reset');\nconst formFieldSets = form.querySelectorAll('fieldset');\nconst main = document.querySelector('main');\n\nformTitleInput.addEventListener('input', validateTitleLength);\nformTitleInput.addEventListener('invalid', checkTitleExistence);\nformHousingTypeSelector.addEventListener('change', changeValidPriceRange);\n\nformPriceInput.addEventListener('input', () => {\n  checkPriceValidity(); // валидация величины цены\n});\n\nformPriceInput.addEventListener('invalid', checkPriceExistence);\nformCheckDepartureSelector.addEventListener('change', () => {\n  makeSelectorsDependent(formCheckDepartureSelector, formCheckEntrySelector);\n});\n\nformCheckEntrySelector.addEventListener('change', () => {\n  makeSelectorsDependent(formCheckEntrySelector, formCheckDepartureSelector);\n});\n\ngetConformity(roomsNumberSelect, guestsNumberSelect);\nguestsNumberSelect.addEventListener('change', function () {\n  getConformity(roomsNumberSelect, guestsNumberSelect);\n});\nroomsNumberSelect.addEventListener('change', function () {\n  getConformity(roomsNumberSelect, guestsNumberSelect);\n});\n\nexport const setFormSubmitHandler = (callback) => {\n  const throwFormSuccessNotice = () => { // вывод сообщения об успешной отправке формы\n    main.appendChild(formSuccessNotice);\n\n    document.addEventListener('click', () => {\n      if (main.contains(formSuccessNotice)) {\n        main.removeChild(formSuccessNotice);\n        form.reset();\n        callback();\n      }\n    });\n\n    document.addEventListener('keydown', function (evtKeydown) { // закрытие сообщения по нажатию esc\n      if (evtKeydown.key === 'Escape' && main.contains(formSuccessNotice)) { // блокировка, чтобы не выдавалась ошибка об отсутствии дочернего элемента\n        main.removeChild(formSuccessNotice);\n        form.reset();\n        callback();\n      }\n    });\n  };\n  form.addEventListener('submit', (evt) => {\n    evt.preventDefault();\n    const formData = new FormData(evt.target);\n    sendData(throwFormSuccessNotice, throwFormErrorNotice, formData); // отправка данных формы на сервер\n  });\n};\n\nexport const setFormResetHandler = (callback) => {\n  formResetButton.addEventListener('click', (evt) => {\n    evt.preventDefault();\n    form.reset();\n    callback();\n    fillFormAddress(TokyoCenterView.LATITUDE, TokyoCenterView.LONGITUDE);\n  });\n}\n\nconst throwFormErrorNotice = (errorMessage) => { // вывод сообщения об ошибке при формы\n  main.appendChild(formErrorNotice);\n  const formErrorNoticeText = document.querySelector('.error__message'); // извлекаем параграф с сообщением\n  formErrorNoticeText.textContent = errorMessage; // корректируем сообщение\n\n  document.addEventListener('click', () => {\n    if (main.contains(formErrorNotice)) {\n      main.removeChild(formErrorNotice);\n    }\n  });\n\n  document.addEventListener('keydown', function (evtKeydown) { // закрытие сообщения по нажатию esc\n    if (evtKeydown.key === 'Escape' && main.contains(formErrorNotice)) { // блокировка, чтобы не выдавалась ошибка об отсутствии дочернего элемента\n      main.removeChild(formErrorNotice);\n    }\n  });\n};\n\nexport const fillFormAddress = (latitude, longitude) => {\n  formAddress.value = `${latitude}, ${longitude}`; // передача начальных координат главной метки в поле адреса\n};\n\nexport const switchFormActivation = (deactivator) => {\n  if (deactivator) {\n    form.classList.add('ad-form--disabled');\n\n  } else {\n    form.classList.remove('ad-form--disabled');\n  }\n\n  formFieldSets.forEach((fieldSet) => { // все поля формы делаются неактивными deactivator = true\n    fieldSet.disabled = deactivator;\n  });\n};\n\nformAddress.readOnly = true; // делаем поле адреса только для чтения\nmakeSelectorsDependent(formCheckEntrySelector, formCheckDepartureSelector); // синхронизация времён въезда и выезда\n\nexport {form, formTitleInput, formHousingTypeSelector, formPriceInput, formResetButton};\n","const filterForm = document.querySelector('.map__filters');\nconst filters = filterForm.querySelectorAll('select, fieldset');\n\nconst switchFiltersActivation = (deactivator) => { // деактивируется форма фильтров deactivator = true\n  if (deactivator) {\n    filterForm.classList.add('map__filters--disabled');\n  } else {\n    filterForm.classList.remove('map__filters--disabled');\n  }\n\n  filters.forEach((filter) => { // деактивируются все фильтры при deactivator = true\n    filter.disabled = deactivator;\n  });\n}\n\nconst checkHousingType = (estateObject) => { // проверка совпадения estateObject-та с выбранным типом жилья\n  const housingType = document.querySelector('#housing-type option:checked').value; // текущий параметр типа жилья\n  if (housingType === estateObject.offer.type || housingType === 'any') {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst checkPriceRange = (estateObject) => { // проверка попадания estateObject-та в выбранный диапазон цен\n  const housingPrice = document.querySelector('#housing-price option:checked').value; // текущий параметр диапазона цен из селектора\n  let indicator = false;\n  switch (housingPrice) {\n    case 'any':\n      indicator = true;\n      break;\n    case 'low':\n      indicator = (estateObject.offer.price <= 10000);\n      break;\n    case 'middle':\n      indicator = (estateObject.offer.price > 10000 && estateObject.offer.price < 50000);\n      break;\n    case 'high':\n      indicator = (estateObject.offer.price >= 50000);\n  }\n  return indicator;\n};\n\nconst checkHousingRooms = (estateObject) => { // проверка в estateObject-те выбранного количества комнат\n  const housingRooms = document.querySelector('#housing-rooms option:checked').value; // текущий параметр количества комнат\n  if (estateObject.offer.rooms === parseInt(housingRooms, 10) || housingRooms === 'any') {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst checkHousingGuests = (estateObject) => { // проверка в estateObject-те выбранного количества гостей\n  const housingGuests = document.querySelector('#housing-guests option:checked').value; // текущий параметр количества гостей\n  if (estateObject.offer.guests === parseInt(housingGuests, 10) || housingGuests === 'any') {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst checkFacilities = (estateObject) => { // проверка наличия в estateObject-те выбранных удобств\n  const facilitiesArray = document.querySelectorAll('#housing-features input'); // массив опций удобств\n  let indicator = true;\n  for (let i = 0; i < facilitiesArray.length; i++) { // цикл проходит по всем элементам массива опций удобств\n    if (facilitiesArray[i].checked && !estateObject.offer.features.includes(facilitiesArray[i].value)) { // если удобство чекнуто И его нет в estateObject-те, то...\n      indicator = false;\n      break;\n    }\n  }\n  return indicator;\n};\n\nconst changeFiltersState = (cb, dataToFilter) => { // фильтрация данных с сервера\n  filterForm.addEventListener('change', () => {\n    const filteredOffers = dataToFilter.filter((estateObject) => {\n      return checkHousingType(estateObject) &&\n             checkPriceRange(estateObject) &&\n             checkHousingRooms(estateObject) &&\n             checkHousingGuests(estateObject) &&\n             checkFacilities(estateObject);\n    });\n    cb(filteredOffers);\n  });\n};\n\nexport {switchFiltersActivation, changeFiltersState};\n","import {switchFiltersActivation} from './filter.js';\nimport {switchFormActivation} from './form.js';\n\nconst switchPageActivation = (deactivator) => { // функция активации и деактивации страницы, при deactivator = true деактивирует, при deactivator = false активирует\n  switchFormActivation (deactivator);\n  switchFiltersActivation(deactivator);\n};\n\nswitchPageActivation(true);\nexport {switchPageActivation};\n","/* global L:readonly */\nimport {switchPageActivation} from './page-activation.js';\nimport {TokyoCenterView} from './util.js';\nimport {renderCard} from './card.js';\nimport {fillFormAddress} from './form.js';\n\nconst ESTATE_OBJECTS_NUMBER = 10;\n\nconst map = L.map('map-canvas')\n  .on('load', () => {\n    switchPageActivation(false) // делаем страницу активной\n  })\n  .setView({\n    lat: TokyoCenterView.LATITUDE,\n    lng: TokyoCenterView.LONGITUDE,\n  }, TokyoCenterView.ZOOM);\n\nL.tileLayer(\n  'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n  {\n    attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  },\n).addTo(map);\n\nconst mainPinIcon = L.icon({ // создание иконки для главной метки\n  iconUrl: './img/main-pin.svg',\n  iconSize: [52, 52],\n  iconAnchor: [26, 52],\n});\n\nconst mainPinMarker = L.marker(\n  {\n    lat: TokyoCenterView.LATITUDE,\n    lng: TokyoCenterView.LONGITUDE,\n  },\n  {\n    draggable: true,\n    icon: mainPinIcon,\n  },\n);\n\nexport const resetMainPinPosition = () => {\n  mainPinMarker.setLatLng({\n    lat: TokyoCenterView.LATITUDE,\n    lng: TokyoCenterView.LONGITUDE,\n  });\n  map.setView({\n    lat: TokyoCenterView.LATITUDE,\n    lng: TokyoCenterView.LONGITUDE,\n  }, TokyoCenterView.ZOOM);\n};\n\nmainPinMarker.addTo(map); // отрисовка главной метки\n\nfillFormAddress(TokyoCenterView.LATITUDE, TokyoCenterView.LONGITUDE);\n\nmainPinMarker.on('move', (evt) => { // передача координат главной метки в поле адреса после перемещения\n  const MainMarkerCoordinates = {\n    LATITUDE: evt.target.getLatLng().lat,\n    LONGITUDE: evt.target.getLatLng().lng,\n    SIGNS_NUMBER: 5,\n  }\n  const formAddressLatitude = Math.round(MainMarkerCoordinates.LATITUDE * 10 ** MainMarkerCoordinates.SIGNS_NUMBER) / 10 ** MainMarkerCoordinates.SIGNS_NUMBER;\n  const formAddressLongitude = Math.round(MainMarkerCoordinates.LONGITUDE * 10 ** MainMarkerCoordinates.SIGNS_NUMBER) / 10 ** MainMarkerCoordinates.SIGNS_NUMBER;\n  fillFormAddress(formAddressLatitude, formAddressLongitude);\n});\n\nconst PinIcon = L.icon({ // создание иконок для меток, кроме главной\n  iconUrl: './img/pin.svg',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n});\n\nconst pinsLayerGroup = L.layerGroup() // создаём группу слоёв, куда будут добавляться все маркеры, кроме основного\n  .addTo(map);                      // добавляем группу слоёв на карту\n\nconst renderPins = (estateObjects) => { // отрисовка меток, кроме главной\n  const cyclesNumber = estateObjects.length <= ESTATE_OBJECTS_NUMBER ? estateObjects.length : ESTATE_OBJECTS_NUMBER; // считается количество итераций, на случай, если с сервера придёт данных меньше, чем количество показываемых объектов\n\n  if (pinsLayerGroup.getLayers().length) { // если группа слоев содержит не пустой массив, то...\n    pinsLayerGroup.clearLayers(); // затираются все ранее созданные метки\n  }\n\n  for(let i = 0; i < cyclesNumber; i++) {\n\n    const PinMarker = L.marker(\n      {\n        lat: estateObjects[i].location.lat,\n        lng: estateObjects[i].location.lng,\n      },\n      {\n        icon: PinIcon,\n      },\n    );\n\n    PinMarker\n      .bindPopup(    // вызов попапа карточки объекта\n        renderCard(estateObjects[i]),\n      );\n\n    pinsLayerGroup\n      .addLayer(PinMarker);\n  }\n}\n\nexport {TokyoCenterView, renderPins, map};\n","import {form} from './form.js'\n\nconst FILE_TYPES = ['gif', 'jpg', 'jpeg', 'png'];\nconst avatarFileChooser = form.querySelector('.ad-form__field input[type=file]');\nconst avatarPreview = form.querySelector('.ad-form-header__preview img');\nconst housingFileChooser = form.querySelector('.ad-form__upload input[type=file]');\nconst housingPreviewBlock = form.querySelector('.ad-form__photo');\n\navatarFileChooser.addEventListener('change', function () {\n\n  const file = avatarFileChooser.files[0];\n  const fileName = file.name.toLowerCase();\n\n  const matches = FILE_TYPES.some((ending) => {\n    return fileName.endsWith(ending);\n  });\n\n  if (matches) {\n    const reader = new FileReader();\n\n    reader.addEventListener('load', function () {\n      avatarPreview.src = reader.result;\n    });\n    reader.readAsDataURL(file);\n  }\n\n});\n\nhousingFileChooser.addEventListener('change', function () {\n\n  const file = housingFileChooser.files[0];\n  const fileName = file.name.toLowerCase();\n\n  const matches = FILE_TYPES.some((ending) => {\n    return fileName.endsWith(ending);\n  });\n\n  if (matches) {\n    let reader = new FileReader();\n\n    reader.addEventListener('load', function () {\n      housingPreviewBlock.innerHTML = `<img src=\"${reader.result}\" alt=\"Фото жилья\" width=\"70\" height=\"70\"></img>`;\n    });\n    reader.readAsDataURL(file);\n  }\n\n});\n","const getData = (onSuccess, onError) => { // получение данных с сервера\n  fetch('https://22.javascript.pages.academy/keksobooking/data')\n    .then((response) => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error(`${response.status} (${response.statusText}).`);\n    })\n    .then((data) => {\n      onSuccess(data);\n    })\n    .catch((err) => {\n      onError(err);\n    })\n};\n\nconst sendData = (onSuccess, onError, data) => {\n  fetch('https://22.javascript.pages.academy/keksobooking',\n    {\n      method: 'POST',\n      body: data,\n    },\n  )\n    .then((response) => {\n      if (response.ok) {\n        onSuccess();\n      } else {\n        onError(`${response.status} (${response.statusText}).`);\n      }\n    })\n    .catch((err) => {\n      onError(err);\n    })\n};\n\nexport {getData, sendData};\n","/* global _:readonly */\nimport {showErrorMessage} from './util.js';\nimport './card.js';\nimport {setFormSubmitHandler, setFormResetHandler} from  './form.js';\nimport './page-activation.js';\nimport {changeFiltersState} from './filter.js';\nimport {resetMainPinPosition, renderPins} from './map.js';\nimport {getData} from './server.js';\nimport './photo.js';\n\nconst FILTER_SWITCH_DELAY = 500; // задержка для дебаунса фильтров\n\nsetFormSubmitHandler(resetMainPinPosition);\nsetFormResetHandler(resetMainPinPosition);\ngetData(                                     // отрисовка меток по данным с сервера или сообщения об ошибке\n  (data) => {\n    renderPins(data);                       // отрисовка меток по данным с сервера\n    changeFiltersState(_.debounce(renderPins, FILTER_SWITCH_DELAY), data);   // отрисовка меток при применении фильтров с задержкой debounce\n  },\n  showErrorMessage,                         // отрисовка сообщения об ошибке\n);\n"],"sourceRoot":""}